[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "baio"
version = "0.1.0"
description = "BAIO (Bioinformatics AI for Open-set detection) - A cutting-edge metagenomic analysis platform that leverages foundation models for DNA sequence analysis"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8,<3.11"

# Core dependencies matching environment.yml
dependencies = [
    # Core ML/AI (CPU only)
    "torch==2.5.1",
    "transformers==4.56.1", 
    "tokenizers==0.22.0",
    "accelerate==1.10.1",
    "datasets==4.0.0",
    
    # Scientific computing
    "numpy==2.3.3",
    "pandas==2.3.2", 
    "scipy==1.16.1",
    "scikit-learn==1.5.2",
    "matplotlib==3.10.6",
    "seaborn==0.13.2",
    "plotly==6.3.0",
    
    # Bioinformatics
    "biopython==1.85",
    "pysam==0.23.3",
    
    # Clustering / dimensionality reduction
    "hdbscan==0.8.40",
    "umap-learn==0.5.7",
    
    # Web interface
    "streamlit==1.39.0",
    
    # File I/O / formats
    "h5py==3.12.1",
    "zarr==2.18.2", 
    "pyarrow==17.0.0",
    
    # Utilities
    "tqdm==4.67.1",
    "click==8.1.7",
    "pyyaml==6.0.2",
    "jsonschema==4.25.1",
    "rich==13.9.4",
    
    # Jupyter (from environment.yml)
    "jupyter==1.1.1",
    "jupyterlab==4.4.7", 
    "ipywidgets==8.1.7",
    
    # Pip extras
    "evo2>=0.3.0",
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest==8.4.2",
    "pytest-cov==7.0.0",
    "black==25.1.0",
    "flake8==7.3.0",
    "mypy==1.10.0",
    "isort==6.0.1",
]

[project.urls]
Homepage = "https://github.com/oss-slu/baio"
Repository = "https://github.com/oss-slu/baio"
Issues = "https://github.com/oss-slu/baio/issues"
Documentation = "https://github.com/oss-slu/baio/blob/main/docs/"

[tool.setuptools]
# Package discovery
packages = ["metaseq", "app"]

[tool.setuptools.packages.find]
where = ["."]
include = ["metaseq*", "app*"]
exclude = ["tests*", "docs*", "notebooks*", "runs*", "weights*", "examples*"]

[tool.setuptools.package-data]
metaseq = ["*.yml", "*.yaml", "*.json"]
app = ["*.yml", "*.yaml", "*.json"]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["metaseq", "app"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "biopython.*",
    "pysam.*", 
    "hdbscan.*",
    "umap.*",
    "streamlit.*",
    "plotly.*",
    "seaborn.*",
    "evo2.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["metaseq", "app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]